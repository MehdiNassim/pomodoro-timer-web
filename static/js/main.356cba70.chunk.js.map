{"version":3,"sources":["assets/background.png","assets/ background-large.png","utils/tts.js","styles/theme.js","components/outlineButton/outlineButton-view.js","components/outlineButton/index.js","components/redButton/redButton-view.js","components/redButton/index.js","components/taskInput/taskInput-view.js","components/taskInput/index.js","components/roundNumber/roundNumber-view.js","components/roundNumber/index.js","components/header/header-view.js","components/header/index.js","components/footer/footer-view.js","components/footer/index.js","views/home/home-view.js","utils/formatter.js","utils/timer.js","config/config.js","views/home/home-container.js","app/app.js","serviceWorker.js","index.js"],"names":["module","exports","speech","speak","message","text","PRIMARY","PRIMARY_DARK","DISABLED","SECONDARY","TEXT","ICONS","LIGHT","SMALL","MEDIUM","LARGE","REGULAR","BOLD","BLACK","Button","styled","button","theme","TextLr","p","TextSm","Component","this","props","title","icon","onClick","disabled","Icon","className","toUpperCase","size","color","React","PureComponent","defaultProps","View","Input","input","value","onValueChange","type","placeholder","defaultValue","onChange","autoFocus","newV","console","log","Text","state","setState","Img","img","P","src","background_l","alt","background","Footer","footer","Link","a","rel","target","href","Title","SubTitle","Counter","step","numberOfRounds","remaining","isPaused","subtitle","taskDescription","taskValueChange","roundsNumberValueChange","nextOnPress","startOnPress","pauseOnPress","resumeOnPress","stopOnPress","id","MdSkipNext","MdPlayArrow","seconds","mns","Math","floor","sds","toMMSS","MdStop","MdPause","ms","action","start","setInterval","stop","clearInterval","DEFAULT_ROUND_TIME","DEFAULT_BREAK_TIME","initialState","roundNumber","isBreak","Home","event","timer","secondAction","newRemaining","Timer","player","Speech","hasBrowserSupport","init","initTts","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.356cba70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.fac7cb6d.png\";","module.exports = __webpack_public_path__ + \"static/media/ background-large.83e4c60b.png\";","import Speech from 'speak-tts'\n\nlet speech;\n\nexport const initTts = () => {\n    const player = new Speech();\n    if (player.hasBrowserSupport()) {\n        player.init({\n            'volume': 1,\n            'lang': 'en-GB',\n            'voice': 'Google UK English Male',\n            'splitSentences': true,\n        });\n        speech = player;\n    }\n};\nexport const speak = (message) => speech && speech.speak({\n    text: message,\n});\n","export default {\n    COLORS: {\n        PRIMARY: '#EF5350',\n        PRIMARY_DARK: '#F44336',\n        DISABLED: '#a22a1e',\n        SECONDARY: '#ffffff',\n        TEXT: '#525252',\n        ICONS: '#525252',\n        LIGHT: '#f5f5f5',\n    },\n    FONT_SIZE: {\n        SMALL: '1rem',\n        MEDIUM: '1.4rem',\n        LARGE: '1.8rem',\n    },\n    FONT_WEIGHT: {\n        LIGHT: 200,\n        REGULAR: 400,\n        MEDIUM: 600,\n        BOLD: 800,\n        BLACK: 900,\n    }\n};\n","import React, {Fragment} from \"react\";\nimport PropTypes from \"prop-types\";\nimport theme from \"../../styles/theme\";\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n    border-radius: 16px;\n    border-width: 4px;\n    padding: 4px 4px 4px 16px;\n    background-color: ${theme.COLORS.SECONDARY};\n    border-color: ${theme.COLORS.PRIMARY_DARK};\n    :disabled{\n      background-color: ${theme.COLORS.LIGHT};\n    }\n    :hover{\n      background-color: ${theme.COLORS.LIGHT};\n    }\n    :active{\n      background-color: ${theme.COLORS.LIGHT};\n    }\n    :focus {\n      outline: none !important;\n      box-shadow: 0 0 0.2rem ${theme.COLORS.PRIMARY_DARK};\n    }\n`;\n\nconst TextLr = styled.p`\n        color: ${theme.COLORS.PRIMARY_DARK};\n        font-weight: ${theme.FONT_WEIGHT.MEDIUM};\n        font-size: 2rem;\n        vertical-align: middle;\n`;\n\nconst TextSm = styled.p`\n        color: ${theme.COLORS.PRIMARY_DARK};\n        font-weight: ${theme.FONT_WEIGHT.MEDIUM};\n        font-size: 1.5rem;\n        vertical-align: middle;\n`;\n\nclass Component extends React.PureComponent {\n    render() {\n        const {title, icon, onClick, disabled} = this.props;\n        const Icon = icon;\n        return (\n            <Fragment>\n                <Button\n                    onClick={onClick}\n                    disabled={disabled}\n                    className=\"d-none d-md-inline\"\n                >\n                    <TextLr className=\"d-inline\">\n                        {title.toUpperCase()}\n                    </TextLr>\n                    <Icon\n                        size={72}\n                        color={theme.COLORS.PRIMARY_DARK}\n                    />\n                </Button>\n                <Button\n                    onClick={onClick}\n                    disabled={disabled}\n                    className=\"d-inline d-md-none\"\n                >\n                    <TextSm className=\"d-inline\">\n                        {title.toUpperCase()}\n                    </TextSm>\n                    <Icon\n                        size={48}\n                        color={theme.COLORS.PRIMARY_DARK}\n                    />\n                </Button>\n            </Fragment>)\n    }\n}\n\nComponent.propTypes = {\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.elementType.isRequired,\n    onClick: PropTypes.func,\n    disabled: PropTypes.bool,\n};\n\nComponent.defaultProps = {\n    title: '',\n    onClick: () => {\n    },\n    disabled: false,\n};\n\nexport default Component;\n","import View from './outlineButton-view';\n\nexport default View;\n","import React, {Fragment} from \"react\";\nimport PropTypes from \"prop-types\";\nimport theme from \"../../styles/theme\";\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n    border-radius: 16px;\n    padding: 8px 8px 8px 24px;\n    background-color: ${theme.COLORS.PRIMARY_DARK};\n    :disabled{\n      background-color: ${theme.COLORS.DISABLED};\n    }\n    :hover{\n      background-color: ${theme.COLORS.PRIMARY};\n    }\n    :active{\n      background-color: ${theme.COLORS.PRIMARY};\n    }\n    :focus {\n      outline: none !important;\n      border:1px solid ${theme.COLORS.PRIMARY_DARK};\n      box-shadow: 0 0 0.2rem ${theme.COLORS.PRIMARY_DARK};\n    }\n`;\n\nconst TextLr = styled.p`\n        color: ${theme.COLORS.SECONDARY};\n        font-weight: ${theme.FONT_WEIGHT.MEDIUM};\n        font-size: 2rem;\n        vertical-align: middle;\n`;\n\nconst TextSm = styled.p`\n        color: ${theme.COLORS.SECONDARY};\n        font-weight: ${theme.FONT_WEIGHT.MEDIUM};\n        font-size: 1.5rem;\n        vertical-align: middle;\n`;\n\nclass Component extends React.PureComponent {\n    render() {\n        const {title, icon, onClick, disabled} = this.props;\n        const Icon = icon;\n        return (\n            <Fragment>\n                <Button\n                    onClick={onClick}\n                    disabled={disabled}\n                    className=\"d-none d-md-inline\"\n                >\n                    <TextLr className=\"d-inline\">\n                        {title.toUpperCase()}\n                    </TextLr>\n                    <Icon\n                        size={72}\n                        color={theme.COLORS.SECONDARY}\n                    />\n                </Button>\n                <Button\n                    onClick={onClick}\n                    disabled={disabled}\n                    className=\"d-inline d-md-none\"\n                >\n                    <TextSm className=\"d-inline\">\n                        {title.toUpperCase()}\n                    </TextSm>\n                    <Icon\n                        size={48}\n                        color={theme.COLORS.SECONDARY}\n                    />\n                </Button>\n            </Fragment>)\n    }\n}\n\nComponent.propTypes = {\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.elementType.isRequired,\n    onClick: PropTypes.func,\n    disabled: PropTypes.bool,\n};\n\nComponent.defaultProps = {\n    title: '',\n    onClick: () => {\n    },\n    disabled: false,\n};\n\nexport default Component;\n","import View from './redButton-view';\n\nexport default View;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport theme from \"../../styles/theme\";\nimport styled from 'styled-components';\n\nconst Input = styled.input`\n    align-self: stretch;\n    border-width: 2px;\n    border-color: ${theme.COLORS.TEXT};\n    border-radius: 16px;\n    :focus {\n      outline: none !important;\n      box-shadow: 0 0 0.2rem ${theme.COLORS.ICONS};\n    }\n`;\n\nclass Component extends React.PureComponent {\n    render() {\n        const {value, onValueChange} = this.props;\n        return (<Input\n            type=\"text\"\n            placeholder={'What is Your task ? …'}\n            defaultValue={value}\n            onChange={onValueChange}\n            autoFocus={true}\n            className=\"col-10 col-md-8 col-lg-6 pt-3 pb-5 pr-3 pl-3\"\n        />);\n    }\n}\n\nComponent.propTypes = {\n    onValueChange: PropTypes.func,\n    value: PropTypes.string,\n};\n\nComponent.defaultProps = {\n    onValueChange: (newV) => console.log(newV),\n    value: '',\n};\n\nexport default Component;\n","import View from './taskInput-view';\n\nexport default View;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport theme from \"../../styles/theme\";\nimport styled from 'styled-components';\nimport {MdAdd, MdRemove} from 'react-icons/md';\n\nconst Button = styled.button`\n  border-radius: 16px;\n  border-width: 4px;\n  border-color: ${theme.COLORS.ICONS};\n  padding: 0;\n    :disabled{\n      background-color: ${theme.COLORS.LIGHT};\n    }\n    :hover{\n      background-color: ${theme.COLORS.LIGHT};\n    }\n    :active{\n      background-color: ${theme.COLORS.LIGHT};\n    }\n    :focus {\n      outline: none !important;\n      box-shadow: 0 0 0.2rem ${theme.COLORS.ICONS};\n    }\n`;\n\nconst Text = styled.p`\n    color: ${theme.COLORS.ICONS};\n    font-size: 96px;\n    font-weight: ${theme.FONT_WEIGHT.REGULAR};\n    margin: 0 32px 0 32px;\n`;\n\n\nclass Component extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        const {value} = props;\n        this.state = {value};\n    }\n\n    render() {\n        const {onValueChange} = this.props;\n        const {value} = this.state;\n        return (<div className=\"d-flex flex-row align-items-center justify-content-center\">\n                <Button\n                    onClick={\n                        () => {\n                            this.setState({value: value - 1});\n                            onValueChange(value - 1);\n                        }\n                    }\n                    disabled={value <= 1}\n                >\n                    <MdRemove\n                        color={theme.COLORS.ICONS}\n                        size={48}\n                    />\n                </Button>\n                <Text>{value}</Text>\n                <Button\n                    onClick={() => {\n                        this.setState({value: value + 1});\n                        onValueChange(value + 1);\n                    }}\n                >\n                    <MdAdd\n                        color={theme.COLORS.ICONS}\n                        size={48}\n                    />\n                </Button>\n            </div>\n        );\n    }\n}\n\nComponent.propTypes = {\n    onValueChange: PropTypes.func,\n    value: PropTypes.number,\n};\n\nComponent.defaultProps = {\n    onValueChange: (newV) => console.log(newV),\n    value: 0,\n};\n\nexport default Component;\n","import View from './roundNumber-view';\n\nexport default View;\n","import React, {Fragment} from 'react';\nimport background from '../../assets/background.png';\nimport background_l from '../../assets/ background-large.png';\nimport theme from \"../../styles/theme\";\nimport styled from 'styled-components';\n\nconst Img = styled.img`\n    width: 100vw;\n    pointer-events: none;\n`;\n\nconst P = styled.p`       color: ${theme.COLORS.PRIMARY};\n        font-size: ${theme.FONT_SIZE.LARGE};\n        font-weight: ${theme.FONT_WEIGHT.BOLD};\n`;\n\nexport default class View extends React.PureComponent {\n    render() {\n        return (\n            <Fragment>\n                <div className=\"d-none d-md-block\">\n                    <Img className=\"pb-5 mb-5\" src={background_l} alt=\"Promodoro Timer Logo\"/>\n                </div>\n                <div className=\"d-block d-md-none text-center\">\n                    <Img src={background} alt=\"Promodoro Timer Mobile Logo\"/>\n                    <P className=\"mt-2 mb-5\">Productive as never !</P>\n                </div>\n            </Fragment>\n        );\n    }\n}\n","import View from './header-view';\n\nexport default View;\n","import React from 'react';\nimport styled from 'styled-components';\nimport theme from \"../../styles/theme\";\n\nconst Footer = styled.footer`\n    font-size: 1.2em;\n    text-align: center;\n    color: ${theme.COLORS.TEXT};\n    font-weight: 500;\n`;\n\nconst Link = styled.a`\n  color: ${theme.COLORS.PRIMARY};\n`;\n\nexport default class View extends React.PureComponent {\n    render() {\n        return (\n            <Footer>\n                {'By '}\n                <Link\n                    className=\"d-inline\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                    href=\"https://linkedin.com/in/khodjamehdinassim/\"\n                >\n                    Mehdi Nassim KHODJA\n                </Link>\n            </Footer>\n        );\n    }\n}\n","import View from './footer-view';\n\nexport default View;\n","import React, {Fragment} from \"react\";\nimport PropTypes from \"prop-types\";\nimport './home.css';\nimport OutlineButton from '../../components/outlineButton';\nimport RedButton from '../../components/redButton';\nimport TaskInput from '../../components/taskInput';\nimport RoundNumber from '../../components/roundNumber';\nimport {toMMSS} from \"../../utils/formatter\";\nimport {MdSkipNext, MdPlayArrow, MdPause, MdStop} from 'react-icons/md';\nimport Header from '../../components/header';\nimport Footer from '../../components/footer';\nimport theme from \"../../styles/theme\";\nimport styled from 'styled-components';\n\nconst Title = styled.p`\n    color: ${theme.COLORS.TEXT};  \n    font-size: ${theme.FONT_SIZE.LARGE};\n    font-weight: ${theme.FONT_WEIGHT.BOLD};\n`;\n\nconst SubTitle = styled.p`\n    color: ${theme.COLORS.TEXT};  \n    font-size: ${theme.FONT_SIZE.SMALL};\n    font-weight: ${theme.FONT_WEIGHT.REGULAR};\n`;\n\nconst Counter = styled.p`\n    color: ${theme.COLORS.TEXT};  \n    font-size: 96px;\n    font-weight: ${theme.FONT_WEIGHT.REGULAR};\n`;\n\nclass Component extends React.PureComponent {\n    render() {\n        const {\n            step,\n            numberOfRounds,\n            remaining,\n            isPaused,\n            title,\n            subtitle,\n            taskDescription,\n            taskValueChange,\n            roundsNumberValueChange,\n            nextOnPress,\n            startOnPress,\n            pauseOnPress,\n            resumeOnPress,\n            stopOnPress,\n        } = this.props;\n\n        return <div id=\"container\">\n            <div id=\"content-wrap\" className=\"d-flex flex-column align-items-center justify-content-center text-center\">\n                <Header/>\n                {\n                    !!title && <Title className=\"m-0 p-0\">{title}</Title>\n                }\n                {\n                    !!subtitle && <SubTitle className=\"m-0 p-0\">{subtitle}</SubTitle>\n                }\n                {\n                    step === 1 && <Fragment>\n                        <div className=\"container mb-5 mt-3\">\n                            <TaskInput\n                                value={taskDescription}\n                                onValueChange={taskValueChange}/>\n                        </div>\n                        <RedButton title='next' icon={MdSkipNext}\n                                   onClick={nextOnPress}\n                        />\n                    </Fragment>\n                }\n                {\n                    step === 2 && <Fragment>\n                        <RoundNumber\n                            value={numberOfRounds}\n                            onValueChange={roundsNumberValueChange}\n                        />\n                        <div className=\"mt-3\">\n                            <RedButton title='start' icon={MdPlayArrow}\n                                       onClick={startOnPress}\n                            />\n                        </div>\n                    </Fragment>\n                }\n                {\n                    step === 3 && <Fragment>\n                        <Counter className=\"m-0 p-0\">{toMMSS(remaining)}</Counter>\n                        {\n                            isPaused ?\n                                <div className=\"d-flex flex-row\">\n                                    <div className=\"mr-2\">\n                                        <OutlineButton title='resume' icon={MdPlayArrow}\n                                                       onClick={resumeOnPress}/>\n                                    </div>\n                                    <div className=\"ml-2\">\n                                        <RedButton title='stop' icon={MdStop}\n                                                   onClick={stopOnPress}/>\n                                    </div>\n                                </div>\n                                :\n                                <RedButton title='PAUSE' icon={MdPause}\n                                           onClick={pauseOnPress}\n                                />\n                        }\n                    </Fragment>\n                }\n                {\n                    step === 4 && <Fragment>\n                        <Counter className=\"m-0 p-0\">{'00:00'}</Counter>\n                        <RedButton title='restart' icon={MdPlayArrow}\n                                   onClick={stopOnPress}\n                        />\n                    </Fragment>\n                }\n            </div>\n            <footer id=\"footer\" className=\"text-center\">\n                <Footer/>\n            </footer>\n        </div>\n    }\n}\n\nComponent.propTypes = {\n    step: PropTypes.number,\n    numberOfRounds: PropTypes.number,\n    remaining: PropTypes.number,\n    isPaused: PropTypes.bool,\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    taskDescription: PropTypes.string,\n    taskValueChange: PropTypes.func.isRequired,\n    roundsNumberValueChange: PropTypes.func.isRequired,\n    nextOnPress: PropTypes.func.isRequired,\n    startOnPress: PropTypes.func.isRequired,\n    pauseOnPress: PropTypes.func.isRequired,\n    resumeOnPress: PropTypes.func.isRequired,\n    stopOnPress: PropTypes.func.isRequired,\n};\n\nComponent.defaultProps = {\n    step: 1,\n    numberOfRounds: 1,\n    remaining: 1,\n    isPaused: false,\n    title: '',\n    subtitle: '',\n    taskDescription: '',\n};\n\nexport default Component;\n","export const toMMSS = (seconds) => {\n    let mns = Math.floor(seconds / 60);\n    let sds = seconds % 60;\n    if (mns < 10) {\n        mns = \"0\" + mns;\n    }\n    if (sds < 10) {\n        sds = \"0\" + sds;\n    }\n    return mns + ':' + sds;\n};\n","export default class {\n    constructor(ms, action) {\n        this.ms = ms;\n        this.action = action;\n        this.id = -1;\n    }\n\n    start = () => {\n        this.id = setInterval(this.action, this.ms);\n    };\n\n    stop = () => {\n        clearInterval(this.id);\n    }\n}\n","export const DEFAULT_ROUNDS = 4;\nexport const DEFAULT_TASK = '';\nexport const DEFAULT_ROUND_TIME = 1500;\nexport const DEFAULT_BREAK_TIME = 300;\n","import React from \"react\";\nimport {speak, initTts} from \"../../utils/tts\";\nimport View from \"./home-view\";\nimport Timer from '../../utils/timer';\nimport {DEFAULT_BREAK_TIME, DEFAULT_ROUND_TIME, DEFAULT_ROUNDS, DEFAULT_TASK} from \"../../config/config\";\n\n\nconst initialState = {\n    step: 1,\n    numberOfRounds: DEFAULT_ROUNDS,\n    roundNumber: 1,\n    isPaused: false,\n    isBreak: false,\n    remaining: DEFAULT_ROUND_TIME,\n    title: 'Focus only on 1 task',\n    subtitle: '',\n    taskDescription: DEFAULT_TASK,\n};\n\nclass Component extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState;\n        this.timer = new Timer(1000, this.secondAction);\n    }\n\n    componentDidMount() {\n        initTts();\n    }\n\n    componentWillUnmount() {\n        this.timer.stop();\n    }\n\n    taskValueChange = (event) => {\n        this.setState({taskDescription: event.target.value});\n    };\n    roundsNumberValueChange = (value) => {\n        this.setState({numberOfRounds: value});\n    };\n    nextOnPress = () => {\n        const {taskDescription} = this.state;\n        if (!taskDescription) {\n            this.setState({taskDescription: 'Your task...'});\n        }\n        this.setState({step: 2, title: 'Number of rounds'});\n    };\n    startOnPress = () => {\n        const {\n            roundNumber,\n            taskDescription,\n        } = this.state;\n        this.setState({\n            step: 3,\n            title: `Round ${roundNumber}`,\n            subtitle: taskDescription,\n        });\n        this.timer.start();\n        speak('Start working');\n    };\n    pauseOnPress = () => {\n        this.setState({\n            isPaused: true,\n        });\n        this.timer.stop();\n    };\n    resumeOnPress = () => {\n        this.setState({\n            isPaused: false,\n        });\n        this.timer.start();\n    };\n    stopOnPress = () => {\n        this.setState(initialState);\n        this.timer.stop();\n    };\n    secondAction = () => {\n        const {\n            numberOfRounds,\n            roundNumber,\n            remaining,\n            isBreak,\n            taskDescription,\n        } = this.state;\n        const newRemaining = remaining - 1;\n        if (newRemaining <= 0) {\n            if (isBreak) {\n                // end of the break, start of a new round\n                this.setState({\n                    isBreak: false,\n                    roundNumber: roundNumber + 1,\n                    remaining: DEFAULT_ROUND_TIME,\n                    title: `Round ${roundNumber + 1}`,\n                    subtitle: taskDescription,\n                });\n                speak(`Round ${roundNumber + 1} has started`);\n            } else {\n                if (roundNumber >= numberOfRounds) {\n                    // the end of all rounds\n                    this.setState({remaining: 0, step: 4, title: 'Congratulations!', subtitle: 'You have finished'});\n                    this.timer.stop();\n                    speak('Congratulations, you have finished');\n                } else {\n                    // start of a break, end of a round\n                    this.setState({\n                        isBreak: true,\n                        remaining: DEFAULT_BREAK_TIME,\n                        title: 'Take a break',\n                        subtitle: '',\n                    });\n                    speak('Take a break');\n                }\n            }\n        } else {\n            this.setState({remaining: newRemaining});\n        }\n    };\n\n\n    render() {\n        const {\n            step,\n            numberOfRounds,\n            remaining,\n            isPaused,\n            isBreak,\n            title,\n            subtitle,\n            taskDescription,\n        } = this.state;\n        return <View\n            step={step}\n            numberOfRounds={numberOfRounds}\n            remaining={remaining}\n            isBreak={isBreak}\n            isPaused={isPaused}\n            title={title}\n            subtitle={subtitle}\n            taskDescription={taskDescription}\n            taskValueChange={this.taskValueChange}\n            roundsNumberValueChange={this.roundsNumberValueChange}\n            nextOnPress={this.nextOnPress}\n            startOnPress={this.startOnPress}\n            pauseOnPress={this.pauseOnPress}\n            resumeOnPress={this.resumeOnPress}\n            stopOnPress={this.stopOnPress}\n        />;\n    }\n}\n\nexport default Component;\n","import Home from '../views/home';\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport App from './app/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}